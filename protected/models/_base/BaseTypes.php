<?php

/**
 * This is the model base class for the table "types".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Types".
 *
 * Columns in table "types" available as properties of the model,
 * followed by relations of table "types" available as properties of the model.
 *
 * @property string $idType
 * @property string $name
 * @property string $dCreation
 * @property string $idAdviser
 *
 * @property Assets[] $assets
 * @property Demographics[] $demographics
 * @property Advisers $idAdviser0
 */
abstract class BaseTypes extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'types';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Types|Types', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, dCreation, idAdviser', 'required'),
			array('name', 'length', 'max'=>55),
			array('idAdviser', 'length', 'max'=>20),
			array('idType, name, dCreation, idAdviser', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'assets' => array(self::HAS_MANY, 'Assets', 'idType'),
			'demographics' => array(self::HAS_MANY, 'Demographics', 'idType'),
			'idAdviser0' => array(self::BELONGS_TO, 'Advisers', 'idAdviser'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idType' => Yii::t('app', 'Id Type'),
			'name' => Yii::t('app', 'Name'),
			'dCreation' => Yii::t('app', 'D Creation'),
			'idAdviser' => null,
			'assets' => null,
			'demographics' => null,
			'idAdviser0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idType', $this->idType, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('dCreation', $this->dCreation, true);
		$criteria->compare('idAdviser', $this->idAdviser);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}