<?php

/**
 * This is the model base class for the table "supports".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Supports".
 *
 * Columns in table "supports" available as properties of the model,
 * followed by relations of table "supports" available as properties of the model.
 *
 * @property integer $idsupports
 * @property string $idWallet
 * @property string $fileName
 * @property string $fileType
 * @property string $dFile
 * @property string $dCreation
 * @property string $file
 *
 * @property Wallets $idWallet0
 */
abstract class BaseSupports extends GxActiveRecord {

	public $fileP;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'supports';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Supports|Supports', $n);
	}

	public static function representingColumn() {
		return 'fileName';
	}

	public function rules() {
		return array(
			array('idWallet, fileName, fileType, dFile, dCreation', 'required'),
			array('idWallet', 'length', 'max'=>20),
			array('fileName', 'length', 'max'=>155),
			array('fileType', 'length', 'max'=>55),
			array('file', 'length', 'max'=>255),
			array('file', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idsupports, idWallet, fileName, fileType, dFile, dCreation, file', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idWallet0' => array(self::BELONGS_TO, 'Wallets', 'idWallet'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idsupports' => Yii::t('app', 'Idsupports'),
			'idWallet' => null,
			'fileName' => Yii::t('app', 'Nombre de archivo'),
			'fileType' => Yii::t('app', 'File Type'),
			'dFile' => Yii::t('app', 'Fecha'),
			'dCreation' => Yii::t('app', 'D Creation'),
			'file' => Yii::t('app', 'File'),
			'fileP' => Yii::t('app', ''),
			'idWallet0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idsupports', $this->idsupports);
		$criteria->compare('idWallet', $this->idWallet);
		$criteria->compare('fileName', $this->fileName, true);
		$criteria->compare('fileType', $this->fileType, true);
		$criteria->compare('dFile', $this->dFile, true);
		$criteria->compare('dCreation', $this->dCreation, true);
		$criteria->compare('file', $this->file, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}