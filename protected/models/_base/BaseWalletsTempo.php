<?php

/**
 * This is the model base class for the table "wallets_tempo".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "WalletsTempo".
 *
 * Columns in table "wallets_tempo" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $idNumber
 * @property double $capitalValue
 * @property string $legalName
 * @property string $address
 * @property string $phone
 * @property string $email
 * @property string $ciudad
 * @property string $idStatus
 * @property string $product
 * @property string $idAdviser
 * @property string $validThrough
 * @property string $accountNumber
 * @property string $idCampaign
 * @property integer $migrate
 * @property string $lote
 * @property double $titleValue
 * @property string $typePhone1
 * @property string $countryPhone1
 * @property string $cityPhone1
 * @property string $phone1
 * @property string $typePhone2
 * @property string $countryPhone2
 * @property string $cityPhone2
 * @property string $phone2
 * @property string $typePhone3
 * @property string $countryPhone3
 * @property string $cityPhone3
 * @property string $phone3
 * @property string $nameReference1
 * @property string $relationshipReferenc1
 * @property string $countryReference1
 * @property string $cityReference1
 * @property string $commentReference1
 * @property string $nameReference2
 * @property string $relationshipReference2
 * @property string $countryReference2
 * @property string $cityReference2
 * @property string $commentReference2
 * @property string $nameReference3
 * @property string $relationshipReference3
 * @property string $countryReference3
 * @property string $cityReference3
 * @property string $commentReference3
 * @property string $nameEmail1
 * @property string $email1
 * @property string $nameEmail2
 * @property string $email2
 * @property string $nameEmail3
 * @property string $email3
 * @property string $typeAddress1
 * @property string $address1
 * @property string $countryAdrress1
 * @property string $cityAddress1
 * @property string $typeAddress2
 * @property string $address2
 * @property string $countryAddress2
 * @property string $cityAddress2
 * @property string $typeAddress3
 * @property string $address3
 * @property string $countryAddress3
 * @property string $cityAddress3
 * @property string $typeAsset1
 * @property string $nameAsset1
 * @property string $commentAsset1
 * @property string $dateAsset1
 * @property string $typeAsset2
 * @property string $nameAsset2
 * @property string $commentAsset2
 * @property string $dateAsset2
 * @property string $typeAsset3
 * @property string $nameAsset3
 * @property string $commentAsset3
 * @property string $dateAsset3
 *
 */
abstract class BaseWalletsTempo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'wallets_tempo';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'WalletsTempo|WalletsTempos', $n);
	}

	public static function representingColumn() {
		return 'address';
	}

	public function rules() {
		return array(
			array('idNumber, capitalValue, legalName, address, phone, email, ciudad, product, validThrough, accountNumber, idCampaign, typePhone1, countryPhone1, cityPhone1, phone1, typePhone2, countryPhone2, cityPhone2, phone2, typePhone3, countryPhone3, cityPhone3, phone3, nameReference1, relationshipReferenc1, countryReference1, cityReference1, commentReference1, nameReference2, relationshipReference2, countryReference2, cityReference2, commentReference2, nameReference3, relationshipReference3, countryReference3, cityReference3, commentReference3, nameEmail1, email1, nameEmail2, email2, nameEmail3, email3, typeAddress1, address1, countryAdrress1, cityAddress1, typeAddress2, address2, countryAddress2, cityAddress2, typeAddress3, address3, countryAddress3, cityAddress3, typeAsset1, nameAsset1, commentAsset1, dateAsset1, typeAsset2, nameAsset2, commentAsset2, dateAsset2, typeAsset3, nameAsset3, commentAsset3, dateAsset3', 'required'),
			array('migrate', 'numerical', 'integerOnly'=>true),
			array('capitalValue, titleValue', 'numerical'),
			array('idNumber, phone', 'length', 'max'=>45),
			array('legalName, address, ciudad, nameReference1, relationshipReferenc1, nameReference2, relationshipReference2, nameReference3, relationshipReference3, nameEmail1, email1, nameEmail2, email2, nameEmail3, email3, typeAddress1, typeAddress2, typeAddress3, typeAsset1, nameAsset1, typeAsset2, nameAsset2, typeAsset3, nameAsset3', 'length', 'max'=>255),
			array('email, accountNumber', 'length', 'max'=>55),
			array('idStatus, idAdviser, idCampaign', 'length', 'max'=>20),
			array('product', 'length', 'max'=>155),
			array('lote, typePhone1, typePhone2, typePhone3', 'length', 'max'=>100),
			array('countryPhone1, cityPhone1, phone1, countryPhone2, cityPhone2, phone2, countryPhone3, cityPhone3, phone3, countryReference1, cityReference1, countryReference2, cityReference2, countryReference3, cityReference3, countryAdrress1, cityAddress1, countryAddress2, cityAddress2, countryAddress3, cityAddress3', 'length', 'max'=>200),
			array('idStatus, idAdviser, migrate, lote, titleValue', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idNumber, capitalValue, legalName, address, phone, email, ciudad, idStatus, product, idAdviser, validThrough, accountNumber, idCampaign, migrate, lote, titleValue, typePhone1, countryPhone1, cityPhone1, phone1, typePhone2, countryPhone2, cityPhone2, phone2, typePhone3, countryPhone3, cityPhone3, phone3, nameReference1, relationshipReferenc1, countryReference1, cityReference1, commentReference1, nameReference2, relationshipReference2, countryReference2, cityReference2, commentReference2, nameReference3, relationshipReference3, countryReference3, cityReference3, commentReference3, nameEmail1, email1, nameEmail2, email2, nameEmail3, email3, typeAddress1, address1, countryAdrress1, cityAddress1, typeAddress2, address2, countryAddress2, cityAddress2, typeAddress3, address3, countryAddress3, cityAddress3, typeAsset1, nameAsset1, commentAsset1, dateAsset1, typeAsset2, nameAsset2, commentAsset2, dateAsset2, typeAsset3, nameAsset3, commentAsset3, dateAsset3', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idNumber' => Yii::t('app', 'Id Number'),
			'capitalValue' => Yii::t('app', 'Capital Value'),
			'legalName' => Yii::t('app', 'Legal Name'),
			'address' => Yii::t('app', 'Address'),
			'phone' => Yii::t('app', 'Phone'),
			'email' => Yii::t('app', 'Email'),
			'ciudad' => Yii::t('app', 'Ciudad'),
			'idStatus' => Yii::t('app', 'Id Status'),
			'product' => Yii::t('app', 'Product'),
			'idAdviser' => Yii::t('app', 'Id Adviser'),
			'validThrough' => Yii::t('app', 'Valid Through'),
			'accountNumber' => Yii::t('app', 'Account Number'),
			'idCampaign' => Yii::t('app', 'Id Campaign'),
			'migrate' => Yii::t('app', 'Migrate'),
			'lote' => Yii::t('app', 'Lote'),
			'titleValue' => Yii::t('app', 'Title Value'),
			'typePhone1' => Yii::t('app', 'Type Phone1'),
			'countryPhone1' => Yii::t('app', 'Country Phone1'),
			'cityPhone1' => Yii::t('app', 'City Phone1'),
			'phone1' => Yii::t('app', 'Phone1'),
			'typePhone2' => Yii::t('app', 'Type Phone2'),
			'countryPhone2' => Yii::t('app', 'Country Phone2'),
			'cityPhone2' => Yii::t('app', 'City Phone2'),
			'phone2' => Yii::t('app', 'Phone2'),
			'typePhone3' => Yii::t('app', 'Type Phone3'),
			'countryPhone3' => Yii::t('app', 'Country Phone3'),
			'cityPhone3' => Yii::t('app', 'City Phone3'),
			'phone3' => Yii::t('app', 'Phone3'),
			'nameReference1' => Yii::t('app', 'Name Reference1'),
			'relationshipReferenc1' => Yii::t('app', 'Relationship Referenc1'),
			'countryReference1' => Yii::t('app', 'Country Reference1'),
			'cityReference1' => Yii::t('app', 'City Reference1'),
			'commentReference1' => Yii::t('app', 'Comment Reference1'),
			'nameReference2' => Yii::t('app', 'Name Reference2'),
			'relationshipReference2' => Yii::t('app', 'Relationship Reference2'),
			'countryReference2' => Yii::t('app', 'Country Reference2'),
			'cityReference2' => Yii::t('app', 'City Reference2'),
			'commentReference2' => Yii::t('app', 'Comment Reference2'),
			'nameReference3' => Yii::t('app', 'Name Reference3'),
			'relationshipReference3' => Yii::t('app', 'Relationship Reference3'),
			'countryReference3' => Yii::t('app', 'Country Reference3'),
			'cityReference3' => Yii::t('app', 'City Reference3'),
			'commentReference3' => Yii::t('app', 'Comment Reference3'),
			'nameEmail1' => Yii::t('app', 'Name Email1'),
			'email1' => Yii::t('app', 'Email1'),
			'nameEmail2' => Yii::t('app', 'Name Email2'),
			'email2' => Yii::t('app', 'Email2'),
			'nameEmail3' => Yii::t('app', 'Name Email3'),
			'email3' => Yii::t('app', 'Email3'),
			'typeAddress1' => Yii::t('app', 'Type Address1'),
			'address1' => Yii::t('app', 'Address1'),
			'countryAdrress1' => Yii::t('app', 'Country Adrress1'),
			'cityAddress1' => Yii::t('app', 'City Address1'),
			'typeAddress2' => Yii::t('app', 'Type Address2'),
			'address2' => Yii::t('app', 'Address2'),
			'countryAddress2' => Yii::t('app', 'Country Address2'),
			'cityAddress2' => Yii::t('app', 'City Address2'),
			'typeAddress3' => Yii::t('app', 'Type Address3'),
			'address3' => Yii::t('app', 'Address3'),
			'countryAddress3' => Yii::t('app', 'Country Address3'),
			'cityAddress3' => Yii::t('app', 'City Address3'),
			'typeAsset1' => Yii::t('app', 'Type Asset1'),
			'nameAsset1' => Yii::t('app', 'Name Asset1'),
			'commentAsset1' => Yii::t('app', 'Comment Asset1'),
			'dateAsset1' => Yii::t('app', 'Date Asset1'),
			'typeAsset2' => Yii::t('app', 'Type Asset2'),
			'nameAsset2' => Yii::t('app', 'Name Asset2'),
			'commentAsset2' => Yii::t('app', 'Comment Asset2'),
			'dateAsset2' => Yii::t('app', 'Date Asset2'),
			'typeAsset3' => Yii::t('app', 'Type Asset3'),
			'nameAsset3' => Yii::t('app', 'Name Asset3'),
			'commentAsset3' => Yii::t('app', 'Comment Asset3'),
			'dateAsset3' => Yii::t('app', 'Date Asset3'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idNumber', $this->idNumber, true);
		$criteria->compare('capitalValue', $this->capitalValue);
		$criteria->compare('legalName', $this->legalName, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('ciudad', $this->ciudad, true);
		$criteria->compare('idStatus', $this->idStatus, true);
		$criteria->compare('product', $this->product, true);
		$criteria->compare('idAdviser', $this->idAdviser, true);
		$criteria->compare('validThrough', $this->validThrough, true);
		$criteria->compare('accountNumber', $this->accountNumber, true);
		$criteria->compare('idCampaign', $this->idCampaign, true);
		$criteria->compare('migrate', $this->migrate);
		$criteria->compare('lote', $this->lote, true);
		$criteria->compare('titleValue', $this->titleValue);
		$criteria->compare('typePhone1', $this->typePhone1, true);
		$criteria->compare('countryPhone1', $this->countryPhone1, true);
		$criteria->compare('cityPhone1', $this->cityPhone1, true);
		$criteria->compare('phone1', $this->phone1, true);
		$criteria->compare('typePhone2', $this->typePhone2, true);
		$criteria->compare('countryPhone2', $this->countryPhone2, true);
		$criteria->compare('cityPhone2', $this->cityPhone2, true);
		$criteria->compare('phone2', $this->phone2, true);
		$criteria->compare('typePhone3', $this->typePhone3, true);
		$criteria->compare('countryPhone3', $this->countryPhone3, true);
		$criteria->compare('cityPhone3', $this->cityPhone3, true);
		$criteria->compare('phone3', $this->phone3, true);
		$criteria->compare('nameReference1', $this->nameReference1, true);
		$criteria->compare('relationshipReferenc1', $this->relationshipReferenc1, true);
		$criteria->compare('countryReference1', $this->countryReference1, true);
		$criteria->compare('cityReference1', $this->cityReference1, true);
		$criteria->compare('commentReference1', $this->commentReference1, true);
		$criteria->compare('nameReference2', $this->nameReference2, true);
		$criteria->compare('relationshipReference2', $this->relationshipReference2, true);
		$criteria->compare('countryReference2', $this->countryReference2, true);
		$criteria->compare('cityReference2', $this->cityReference2, true);
		$criteria->compare('commentReference2', $this->commentReference2, true);
		$criteria->compare('nameReference3', $this->nameReference3, true);
		$criteria->compare('relationshipReference3', $this->relationshipReference3, true);
		$criteria->compare('countryReference3', $this->countryReference3, true);
		$criteria->compare('cityReference3', $this->cityReference3, true);
		$criteria->compare('commentReference3', $this->commentReference3, true);
		$criteria->compare('nameEmail1', $this->nameEmail1, true);
		$criteria->compare('email1', $this->email1, true);
		$criteria->compare('nameEmail2', $this->nameEmail2, true);
		$criteria->compare('email2', $this->email2, true);
		$criteria->compare('nameEmail3', $this->nameEmail3, true);
		$criteria->compare('email3', $this->email3, true);
		$criteria->compare('typeAddress1', $this->typeAddress1, true);
		$criteria->compare('address1', $this->address1, true);
		$criteria->compare('countryAdrress1', $this->countryAdrress1, true);
		$criteria->compare('cityAddress1', $this->cityAddress1, true);
		$criteria->compare('typeAddress2', $this->typeAddress2, true);
		$criteria->compare('address2', $this->address2, true);
		$criteria->compare('countryAddress2', $this->countryAddress2, true);
		$criteria->compare('cityAddress2', $this->cityAddress2, true);
		$criteria->compare('typeAddress3', $this->typeAddress3, true);
		$criteria->compare('address3', $this->address3, true);
		$criteria->compare('countryAddress3', $this->countryAddress3, true);
		$criteria->compare('cityAddress3', $this->cityAddress3, true);
		$criteria->compare('typeAsset1', $this->typeAsset1, true);
		$criteria->compare('nameAsset1', $this->nameAsset1, true);
		$criteria->compare('commentAsset1', $this->commentAsset1, true);
		$criteria->compare('dateAsset1', $this->dateAsset1, true);
		$criteria->compare('typeAsset2', $this->typeAsset2, true);
		$criteria->compare('nameAsset2', $this->nameAsset2, true);
		$criteria->compare('commentAsset2', $this->commentAsset2, true);
		$criteria->compare('dateAsset2', $this->dateAsset2, true);
		$criteria->compare('typeAsset3', $this->typeAsset3, true);
		$criteria->compare('nameAsset3', $this->nameAsset3, true);
		$criteria->compare('commentAsset3', $this->commentAsset3, true);
		$criteria->compare('dateAsset3', $this->dateAsset3, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}