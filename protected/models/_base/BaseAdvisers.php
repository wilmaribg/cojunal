<?php

/**
 * This is the model base class for the table "advisers".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Advisers".
 *
 * Columns in table "advisers" available as properties of the model,
 * followed by relations of table "advisers" available as properties of the model.
 *
 * @property string $idAdviser
 * @property string $name
 * @property string $email
 * @property string $passwd
 * @property string $dCreation
 * @property string $dUpdate
 * @property integer $active
  * @property double $weeklyGoal
 * @property double $monthlyGoal
 * @property string $status_idStatus
 *
 * @property AuthAssignment $idAuthAssignment0
 * @property Agendas[] $agendases
 * @property Assets[] $assets
 * @property Campaigns[] $campaigns
 * @property Comments[] $comments
 * @property Demographics[] $demographics
 * @property Payments[] $payments
 * @property Promises[] $promises
 * @property Types[] $types
 * @property Wallets[] $wallets
 */
abstract class BaseAdvisers extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'advisers';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Asesores|Asesores', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, parentAdviser, email, passwd, dCreation, dUpdate, idAuthAssignment, weeklyGoal, monthlyGoal, status_idStatus',  'required'),
			array('active', 'numerical', 'integerOnly'=>true),
			array('weeklyGoal', 'numerical', 'integerOnly'=>true),
			array('monthlyGoal', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>155),
			array('email', 'length', 'max'=>55),
			array('idAuthAssignment, status_idStatus', 'length', 'max'=>20),
			array('passwd', 'length', 'max'=>45),
			array('active', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idAdviser, parentAdviser, name, email, passwd, dCreation, dUpdate, active, idAuthAssignment, weeklyGoal, monthlyGoal, status_idStatus', 'safe', 'on'=>'search'),
			array('email', 'email'),
			
		);
	}

	public function relations() {
		return array(
			'parentAdviser' => array(self::BELONGS_TO, 'Advisers', 'idAdviser'),
			'idAuthAssignment0' => array(self::BELONGS_TO, 'AuthAssignment', 'idAuthAssignment'),
			'statusIdStatus' => array(self::BELONGS_TO, 'Status', 'idStatus'),
			'agendases' => array(self::HAS_MANY, 'Agendas', 'idAdviser'),
			'assets' => array(self::HAS_MANY, 'Assets', 'idAdviser'),
			'campaigns' => array(self::HAS_MANY, 'Campaigns', 'idAdviser'),
			'comments' => array(self::HAS_MANY, 'Comments', 'idAdviser'),
			'demographics' => array(self::HAS_MANY, 'Demographics', 'idAdviser'),
			'payments' => array(self::HAS_MANY, 'Payments', 'idAdviser'),
			'promises' => array(self::HAS_MANY, 'Promises', 'idAdviser'),
			'types' => array(self::HAS_MANY, 'Types', 'idAdviser'),
			'wallets' => array(self::HAS_MANY, 'Wallets', 'idAdviser'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idAdviser' => Yii::t('app', 'Id Adviser'),
			'parentAdviser' => Yii::t('app', 'Id Adviser'),
			'name' => Yii::t('app', 'Nombre'),
			'email' => Yii::t('app', 'Correo'),
			'passwd' => Yii::t('app', 'Clave'),
			'dCreation' => Yii::t('app', 'Fecha CreaciÃ³n'),
			'dUpdate' => Yii::t('app', 'Fecha actualizaciÃ³n'),
			'active' => Yii::t('app', 'Activo'),
			'weeklyGoal' => Yii::t('app', '% Meta Semanal'),
			'monthlyGoal' => Yii::t('app', '% Meta Mensual'),
			'idAuthAssignment' => Yii::t('app', 'Nombre de Usuario'),
			'status_idStatus' => Yii::t('app', 'Rol'),
			'idAuthAssignment0' => null,
			'agendases' => null,
			'assets' => null,
			'campaigns' => null,
			'comments' => null,
			'demographics' => null,
			'payments' => null,
			'promises' => null,
			'types' => null,
			'wallets' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idAdviser', $this->idAdviser, true);
		$criteria->compare('parentAdviser', $this->parentAdviser, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('passwd', $this->passwd, true);
		$criteria->compare('dCreation', $this->dCreation, true);
		$criteria->compare('dUpdate', $this->dUpdate, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('idAuthAssignment', $this->idAuthAssignment);
		$criteria->compare('weeklyGoal', $this->weeklyGoal);
		$criteria->compare('monthlyGoal', $this->monthlyGoal);
		$criteria->compare('status_idStatus', $this->status_idStatus);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
            //'sort' => array('defaultOrder'=>'orden')
		));
	}
}