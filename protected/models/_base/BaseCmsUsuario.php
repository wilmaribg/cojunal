<?php

/**
 * This is the model base class for the table "cms_usuario".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CmsUsuario".
 *
 * Columns in table "cms_usuario" available as properties of the model,
 * followed by relations of table "cms_usuario" available as properties of the model.
 *
 * @property integer $idcmsusuario
 * @property string $usuario
 * @property string $contrasena
 * @property string $nombres
 * @property string $apellidos
 * @property string $email
 * @property string $empresa
 * @property string $telefono
 * @property string $descripcion
 * @property string $ciudad
 * @property integer $cms_rol_id
 * @property string $token_chage
 * @property integer $activo
 *
 * @property CmsRol $cmsRol
 */
abstract class BaseCmsUsuario extends GxActiveRecord {
    
         public $contrasena_confirm;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'cms_usuario';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Usuario|Usuarios', $n);
	}

	public static function representingColumn() {
		return 'usuario';
	}

	public function rules() {
		return array(
			array('usuario, nombres, apellidos, email, empresa, cms_rol_id', 'required'),
                        array('contrasena', 'compare', 'compareAttribute'=>'contrasena_confirm', 'allowEmpty'=>true, 'on'=> 'nuevo'),
			array('cms_rol_id, activo', 'numerical', 'integerOnly'=>true),
                        array('email', 'email'),
			array('usuario', 'length', 'max'=>70),
			array('contrasena', 'length', 'max'=>100),
			array('nombres, apellidos, email', 'length', 'max'=>50),
			array('empresa', 'length', 'max'=>80),
			array('telefono', 'length', 'max'=>150),
			array('ciudad', 'length', 'max'=>30),
			array('token_chage', 'length', 'max'=>255),
			array('descripcion, contrasena, contrasena_confirm', 'safe'),
			array('telefono, descripcion, ciudad, token_chage, contrasena, contrasena_confirm, activo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idcmsusuario, usuario, contrasena, nombres, apellidos, email, empresa, telefono, descripcion, ciudad, cms_rol_id, token_chage, activo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'cmsRol' => array(self::BELONGS_TO, 'CmsRol', 'cms_rol_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idcmsusuario' => Yii::t('app', 'Idcmsusuario'),
			'usuario' => Yii::t('app', 'Usuario'),
			'contrasena' => Yii::t('app', 'Contraseña'),
                        'contrasena_confirm' => Yii::t('app', 'Confirmar Contraseña'),
			'nombres' => Yii::t('app', 'Nombres'),
			'apellidos' => Yii::t('app', 'Apellidos'),
			'email' => Yii::t('app', 'Email'),
			'empresa' => Yii::t('app', 'Empresa'),
			'telefono' => Yii::t('app', 'Teléfono'),
			'descripcion' => Yii::t('app', 'Descripción'),
			'ciudad' => Yii::t('app', 'Ciudad'),
			'cms_rol_id' => null,
			'token_chage' => Yii::t('app', 'Token Change'),
			'activo' => Yii::t('app', 'Activo'),
			'cmsRol' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idcmsusuario', $this->idcmsusuario);
		$criteria->compare('usuario', $this->usuario, true);
		$criteria->compare('contrasena', $this->contrasena, true);
		$criteria->compare('nombres', $this->nombres, true);
		$criteria->compare('apellidos', $this->apellidos, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('empresa', $this->empresa, true);
		$criteria->compare('telefono', $this->telefono, true);
		$criteria->compare('descripcion', $this->descripcion, true);
		$criteria->compare('ciudad', $this->ciudad, true);
		$criteria->compare('cms_rol_id', $this->cms_rol_id);
		$criteria->compare('token_chage', $this->token_chage, true);
		$criteria->compare('activo', $this->activo);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}