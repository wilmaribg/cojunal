<?php

/**
 * This is the model base class for the table "districts".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Districts".
 *
 * Columns in table "districts" available as properties of the model,
 * followed by relations of table "districts" available as properties of the model.
 *
 * @property string $idDistrict
 * @property string $name
 * @property string $idCity
 *
 * @property Campaigns[] $campaigns
 * @property Demographics[] $demographics
 * @property Cities $idCity0
 * @property Wallets[] $wallets
 */
abstract class BaseDistricts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'districts';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PaÃ­s - Departamento - Ciudad|PaÃ­s - Departamento - Ciudad', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, idCity', 'required'),
			array('name', 'length', 'max'=>45),
			array('idCity', 'length', 'max'=>20),
			array('idDistrict, name, idCity', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'campaigns' => array(self::HAS_MANY, 'Campaigns', 'idDistrict'),
			'demographics' => array(self::HAS_MANY, 'Demographics', 'idDistrict'),
			'idCity0' => array(self::BELONGS_TO, 'Cities', 'idCity'),
			'wallets' => array(self::HAS_MANY, 'Wallets', 'idDistrict'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idDistrict' => Yii::t('app', 'Id District'),
			'name' => Yii::t('app', 'Name'),
			'idCity' => null,
			'campaigns' => null,
			'demographics' => null,
			'idCity0' => null,
			'wallets' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idDistrict', $this->idDistrict, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('idCity', $this->idCity);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}