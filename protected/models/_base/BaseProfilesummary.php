<?php

/**
 * This is the model base class for the table "profilesummary".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Profilesummary".
 *
 * Columns in table "profilesummary" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $idAdvisers
 * @property string $campaigns
 * @property string $wallets
 * @property double $assigned
 * @property double $payments
 *
 */
abstract class BaseProfilesummary extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'profilesummary';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Profilesummary|Profilesummaries', $n);
	}

	public static function representingColumn() {
		return 'idAdvisers';
	}

	public function rules() {
		return array(
			array('assigned, payments', 'numerical'),
			array('idAdvisers', 'length', 'max'=>20),
			array('campaigns, wallets', 'length', 'max'=>21),
			array('idAdvisers, campaigns, wallets, assigned, payments', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idAdvisers, campaigns, wallets, assigned, payments', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idAdvisers' => Yii::t('app', 'Id Advisers'),
			'campaigns' => Yii::t('app', 'Campaigns'),
			'wallets' => Yii::t('app', 'Wallets'),
			'assigned' => Yii::t('app', 'Assigned'),
			'payments' => Yii::t('app', 'Payments'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idAdvisers', $this->idAdvisers, true);
		$criteria->compare('campaigns', $this->campaigns, true);
		$criteria->compare('wallets', $this->wallets, true);
		$criteria->compare('assigned', $this->assigned);
		$criteria->compare('payments', $this->payments);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}